buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
 
jar {
    baseName = 'SolvasFleet'
    version =  '0.1.0'
}
 
repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
}
 
dependencies {
    // The Spring Boot Gradle plugin automatically manages versions for select dependencies.
    // See http://docs.spring.io/spring-boot/docs/current/reference/html/appendix-dependency-versions.html
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework:spring-orm'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Validations
    compile 'org.hibernate:hibernate-validator:5.4.0.Final'
    compile 'com.googlecode.libphonenumber:libphonenumber:8.3.3'

    // We want newer versions of these, so we add the version.
    compile 'org.flywaydb:flyway-core:4.1.1'
    compile 'org.hibernate:hibernate-core:5.2.8.Final'
    compile 'org.postgresql:postgresql:42.0.0.jre7'
    compile 'org.mockito:mockito-core:1.10.19'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'com.h2database:h2:1.4.194'

    testCompile 'com.jayway.jsonpath:json-path:2.2.0'
    compile 'io.github.benas:random-beans:3.6.0'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.6'
    compile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'com.h2database:h2:1.4.194'

    testCompile "junit:junit"

    compile 'org.springframework.security:spring-security-web:4.2.2.RELEASE'
    compile 'org.springframework.security:spring-security-jwt'
    compile 'org.springframework.security:spring-security-cas'


    compile 'org.jasig.cas.client:cas-client-core'
    compile 'org.jasig.cas.client:cas-client-support-saml:3.4.1'


    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile 'io.jsonwebtoken:jjwt:0.7.0'
    compile 'com.itextpdf:itextg:5.5.9'
}

task javadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

configurations {
    itestCompile.extendsFrom testCompile
    itestRuntime.extendsFrom testRuntime
}


sourceSets {
    itest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
        java.srcDir file('src/integration-test/java')
        resources.srcDir file('src/main/resources')
    }
    test {
        resources.srcDir file('src/integration-test/resources')
    }
}
task itest(type: Test) {
    testClassesDir = sourceSets.itest.output.classesDir
    classpath = sourceSets.itest.runtimeClasspath
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

task jacocoReport(type: JacocoReport){
    sourceSets sourceSets.main
    executionData test, itest
}

task seedDatabase(type:Exec) {
    workingDir 'src/seed/python'
    commandLine 'python3', 'seed.py'
}

bootRun {
   systemProperties System.properties
}

